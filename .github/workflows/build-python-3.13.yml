name: Build Python 3.13.7 (Standalone Repo)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "build.sh"
      - ".github/workflows/build-python-3.13.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [aarch64, arm, i686, x86_64]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git curl build-essential python3 \
            unzip zip xz-utils patch

      - name: Fetch Termux patches & subpackages
        run: |
          mkdir -p patches
          mkdir -p subpackages
          base_url="https://raw.githubusercontent.com/termux/termux-packages/master/packages/python"

          # Download patches
          for i in $(seq -w 0001 0010); do
            url=$(curl -sSL https://api.github.com/repos/termux/termux-packages/contents/packages/python | grep -o "\"${i}-[^\"]*\.patch\"" | head -n1 | tr -d '"')
            if [ -n "$url" ]; then
              curl -sSL "$base_url/$url" -o "patches/$url"
            fi
          done

          # Download subpackage scripts
          curl -sSL "$base_url/python-ensurepip-wheels.subpackage.sh" -o subpackages/python-ensurepip-wheels.subpackage.sh
          curl -sSL "$base_url/python-tkinter.subpackage.sh" -o subpackages/python-tkinter.subpackage.sh

      - name: Pull Termux Docker
        run: docker pull ghcr.io/termux/termux-docker:latest

      - name: Apply patches & build (${{ matrix.arch }})
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/src \
            -w /src \
            ghcr.io/termux/termux-docker:latest \
            bash -c "
              set -e
              for p in patches/*.patch; do
                [ -f \"\$p\" ] && patch -p1 < \"\$p\" || true
              done
              ./build.sh ${{ matrix.arch }}
            "

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-3.13.7-${{ matrix.arch }}
          path: output/**/*.deb
