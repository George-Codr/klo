name: Build Android

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '3.*'
  pull_request:
    branches:
      - main
      - '3.*'

jobs:
  build-android-313:
    name: Android (aarch64) Python 3.13
    runs-on: macos-14
    timeout-minutes: 90
    env:
      CC: clang
      CXX: clang++
      LD: clang
      AR: llvm-ar
      NM: llvm-nm
      RANLIB: llvm-ranlib
    steps:
      - name: Install dependencies & clone CPython
        run: |
          brew install readline llvm lld dpkg mpdecimal
          brew uninstall gcc || true
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          git clone --branch 3.13 --depth 1 https://github.com/python/cpython.git cpython-3.13
          ls cpython-3.13
      - name: Fetch Termux patches & subpackages
        working-directory: ./cpython-3.13
        run: |
          set -e
          mkdir -p patches
          mkdir -p subpackages
          base_url="https://raw.githubusercontent.com/termux/termux-packages/master/packages/python"

          # get directory listing (via GitHub API)
          api="https://api.github.com/repos/termux/termux-packages/contents/packages/python"
          files=$(curl -sSL "$api" | jq -r '.[].name')
          # download any .patch files found
          for f in $files; do
            case "$f" in
              *.patch)
                echo "Downloading $f"
                curl -sSL "$base_url/$f" -o "patches/$f" || true
                ;;
            esac
          done

          # safe attempt to download known subpackage scripts
          curl -sSL "$base_url/python-ensurepip-wheels.subpackage.sh" -o subpackages/python-ensurepip-wheels.subpackage.sh || true
          curl -sSL "$base_url/python-tkinter.subpackage.sh" -o subpackages/python-tkinter.subpackage.sh || true

      - name: Apply patches (if any)
        working-directory: ./cpython-3.13
        run: |
          set -e
          if ls patches/*.patch 1> /dev/null 2>&1; then
            for p in patches/*.patch; do
              [ -f "$p" ] && (echo "Applying $p" && patch -p1 < "$p") || true
            done
          else
            echo "No patches found."
          fi
          

      - name: Build CPython for Android
        working-directory: ./cpython-3.13/Android
        run: |
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          ./android.py ci aarch64-linux-android
          python3.13 -c "print(import('sys').version)"

      - name: Package as .deb
        run: |
          PKG_NAME=pyv313
          PKG_VERSION=3.13
          ARCH=aarch64
          BUILD_DIR=./cpython-3.13/cross-build/aarch64-linux-android
          OUT_DIR=$( [ -d "$BUILD_DIR/prefix" ] && echo "$BUILD_DIR/prefix" || echo "$BUILD_DIR/install" )
          DEB_DIR=$PKG_NAME

          mkdir -p $DEB_DIR/DEBIAN
          mkdir -p $DEB_DIR/usr
          cp -r $OUT_DIR/* $DEB_DIR/usr/

          cat > $DEB_DIR/DEBIAN/control <<EOF
          Package: $PKG_NAME
          Version: $PKG_VERSION
          Architecture: $ARCH
          Maintainer: Cross-compiled by NotFound
          Description: Python $PKG_VERSION cross-compiled for Termux aarch64
          EOF

          cat > $DEB_DIR/DEBIAN/postinst <<EOF
          #!/bin/sh
          set -e
          echo "$PKG_NAME installed successfully!"
          exit 0
          EOF
          chmod 755 $DEB_DIR/DEBIAN/postinst

          dpkg-deb --build $DEB_DIR ${PKG_NAME}_${PKG_VERSION}_${ARCH}.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: pyv313
          path: pyv313_3.13_aarch64.deb
          if-no-files-found: error

  build-android-314:
    name: Android (aarch64) Python 3.14
    runs-on: macos-14
    timeout-minutes: 90
    env:
      CC: clang
      CXX: clang++
      LD: clang
      AR: llvm-ar
      NM: llvm-nm
      RANLIB: llvm-ranlib
    steps:
      - name: Install dependencies & clone CPython
        run: |
          brew install readline llvm lld dpkg mpdecimal
          brew uninstall gcc || true
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          git clone --branch 3.14 --depth 1 https://github.com/python/cpython.git cpython-3.14
          ls cpython-3.14

      - name: Apply patch
        working-directory: ./cpython-3.14
        run: |
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          curl -L https://raw.githubusercontent.com/plfj/py-build/refs/heads/main/as14.patch -o as14.patch
          git apply ./as14.patch

      - name: Build CPython for Android
        working-directory: ./cpython-3.14/Android
        run: |
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          ./android.py ci aarch64-linux-android
          /Users/runner/work/py-build/py-build/cpython-3.14/cross-build/aarch64-linux-android/prefix/bin/python3.14 -c "print(import('sys').version)" || echo 'Python not found'

      - name: Package as .deb
        run: |
          PKG_NAME=pyv314
          PKG_VERSION=3.14
          ARCH=aarch64
          BUILD_DIR=./cpython-3.14/cross-build/aarch64-linux-android
          OUT_DIR=$( [ -d "$BUILD_DIR/prefix" ] && echo "$BUILD_DIR/prefix" || echo "$BUILD_DIR/install" )
          DEB_DIR=$PKG_NAME

          mkdir -p $DEB_DIR/DEBIAN
          mkdir -p $DEB_DIR/usr
          cp -r $OUT_DIR/* $DEB_DIR/usr/

          cat > $DEB_DIR/DEBIAN/control <<EOF
          Package: $PKG_NAME
          Version: $PKG_VERSION
          Architecture: $ARCH
          Maintainer: Cross-compiled by NotFound
          Description: Python $PKG_VERSION cross-compiled for Termux aarch64
          EOF

          cat > $DEB_DIR/DEBIAN/postinst <<EOF
          #!/bin/sh
          set -e
          echo "$PKG_NAME installed successfully!"
          exit 0
          EOF
          chmod 755 $DEB_DIR/DEBIAN/postinst

          dpkg-deb --build $DEB_DIR ${PKG_NAME}_${PKG_VERSION}_${ARCH}.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: pyv314
          path: pyv314_3.14_aarch64.deb
          if-no-files-found: error

  build-android-315:
    name: Android (aarch64) Python 3.15
    runs-on: macos-14
    timeout-minutes: 90
    env:
      CC: clang
      CXX: clang++
      LD: clang
      AR: llvm-ar
      NM: llvm-nm
      RANLIB: llvm-ranlib
    steps:
      - name: Install dependencies & clone CPython
        run: |
          brew install readline llvm lld dpkg mpdecimal
          brew uninstall gcc || true
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          git clone --branch main --depth 1 https://github.com/python/cpython.git cpython-3.15
          ls cpython-3.15

      - name: Build CPython for Android
        working-directory: ./cpython-3.15/Android
        run: |
          export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          ./android.py ci aarch64-linux-android
          /Users/runner/work/py-build/py-build/cpython-3.15/cross-build/aarch64-linux-android/prefix/bin/python3.15 -c "print(import('sys').version)" || echo 'Python not found'

      - name: Package as .deb
        run: |
          PKG_NAME=pyv315
          PKG_VERSION=3.15
          ARCH=aarch64
          BUILD_DIR=./cpython-3.15/cross-build/aarch64-linux-android
          OUT_DIR=$( [ -d "$BUILD_DIR/prefix" ] && echo "$BUILD_DIR/prefix" || echo "$BUILD_DIR/install" )
          DEB_DIR=$PKG_NAME

          mkdir -p $DEB_DIR/DEBIAN
          mkdir -p $DEB_DIR/usr
          cp -r $OUT_DIR/* $DEB_DIR/usr/

          cat > $DEB_DIR/DEBIAN/control <<EOF
          Package: $PKG_NAME
          Version: $PKG_VERSION
          Architecture: $ARCH
          Maintainer: Cross-compiled by NotFound
          Description: Python $PKG_VERSION cross-compiled for Termux aarch64
          EOF

          cat > $DEB_DIR/DEBIAN/postinst <<EOF
          #!/bin/sh
          set -e
          echo "$PKG_NAME installed successfully!"
          exit 0
          EOF
          chmod 755 $DEB_DIR/DEBIAN/postinst

          dpkg-deb --build $DEB_DIR ${PKG_NAME}_${PKG_VERSION}_${ARCH}.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: pyv315
          path: pyv315_3.15_aarch64.deb
          if-no-files-found: error
